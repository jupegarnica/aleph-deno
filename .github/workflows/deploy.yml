name: Deploy

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["build and publish"]
    # branches: [master]
    types:
      - completed
      # - requested
jobs:

  getLatestBuild:

    runs-on: ubuntu-latest
    outputs:
      LATEST_BUILD: ${{ steps.latestBuild.outputs.latestBuild }}
      LATEST_BUILD_SUCCEED: ${{ steps.latestBuildSucceed.outputs.latestBuildSucceed }}
    steps:

      - uses: actions/checkout@v2
      - id: latestBuild
        name: set last build env
        run: |
          LATEST_BUILD=`cat latestBuild`
          echo $LATEST_BUILD
          echo "::set-output name=latestBuild::$LATEST_BUILD"
      - id: latestBuildSucceed
        name: set last build env
        run: |
          LATEST_BUILD_SUCCEED=`cat latestBuildSucceed`
          echo $LATEST_BUILD_SUCCEED
          echo "::set-output name=latestBuildSucceed::$LATEST_BUILD_SUCCEED"

  deploy:
    runs-on: ubuntu-latest
    needs: getLatestBuild
    # if: needs.getLatestBuild.outputs.LATEST_BUILD != ''
    steps:
      - run: echo ${{needs.getLatestBuild.outputs.LATEST_BUILD}}
      - run: echo ${{needs.getLatestBuild.outputs.LATEST_BUILD_SUCCEED}}

      - name: ssh to server
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
            docker pull ${{needs.getLatestBuild.outputs.LATEST_BUILD}}
            docker stop aleph-prod
            docker run -d -it -p 80:8080 --name aleph-prod --restart=always ${{needs.getLatestBuild.outputs.LATEST_BUILD}}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          # privateKey: ${{ secrets.SSH_KEY}}
  saveLatestBuildSucceed:
    runs-on: ubuntu-latest
    needs: [deploy,getLatestBuild]
    steps:
      - uses: actions/checkout@v2
      - run: echo ${{needs.getLatestBuild.outputs.LATEST_BUILD_SUCCEED}}
      - run: echo ${{needs.getLatestBuild.outputs.LATEST_BUILD}}
      - run: echo ${{needs.getLatestBuild.outputs.LATEST_BUILD}} > latestBuildSucceed
      - name: push latestBuildSucceed
        uses: github-actions-x/commit@v2.7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: 'add latestBuildSucceed'
          force-add: 'true'
          files: latestBuildSucceed
          name:  deploy-job