name: Deploy

on:
  workflow_dispatch:
  # registry_package:
  #   types: [updated]
  workflow_run:
    workflows: ["build and publish"]
    types:
      - completed
jobs:

  getLatestBuild:

    runs-on: ubuntu-latest
    outputs:
      LATEST_BUILD: ${{ steps.setVersion.outputs.latestBuild }}
      LATEST_BUILD_SUCCEED: ${{ steps.setVersion.outputs.latestBuildSucceed }}
      IMAGE_ID: ${{ steps.setVersion.outputs.imageId }}
    steps:

      - uses: actions/checkout@v2
      - id: setVersion
        run: |
          IMAGE_ID=`cat metadata/imageId`
          echo $IMAGE_ID
          echo "::set-output name=imageId::$IMAGE_ID"

          LATEST_BUILD=`cat metadata/latestBuild`
          echo $LATEST_BUILD
          echo "::set-output name=latestBuild::$LATEST_BUILD"

          LATEST_BUILD_SUCCEED=`cat metadata/latestBuildSucceed`
          echo $LATEST_BUILD_SUCCEED
          echo "::set-output name=latestBuildSucceed::$LATEST_BUILD_SUCCEED"

  deploy:
    runs-on: ubuntu-latest
    needs: getLatestBuild

    if: needs.getLatestBuild.outputs.LATEST_BUILD != needs.getLatestBuild.outputs.LATEST_BUILD_SUCCEED
    steps:
      - id: deploySsh
        name: ssh to server
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            DOCKER_IMAGE=${{needs.getLatestBuild.outputs.IMAGE_ID}}:${{needs.getLatestBuild.outputs.LATEST_BUILD}}
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
            docker pull $DOCKER_IMAGE
            docker stop $(docker ps -a -q)
            docker run -d -p 80:8080 --name aleph-prod-${{needs.getLatestBuild.outputs.LATEST_BUILD}} --restart=unless-stopped $DOCKER_IMAGE

          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          # privateKey: ${{ secrets.SSH_KEY}}
